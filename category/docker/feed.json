{
    "version": "https://jsonfeed.org/version/1",
    "title": "Hexo • All posts by \"docker\" category",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2023/11/b27133502b1c.html",
            "url": "http://example.com/2023/11/b27133502b1c.html",
            "title": "基础",
            "date_published": "2023-11-14T11:57:10.000Z",
            "content_html": "<h1 id=\"docker简介\"><a class=\"markdownIt-Anchor\" href=\"#docker简介\">#</a> Docker 简介</h1>\n<h2 id=\"docker生成背景\"><a class=\"markdownIt-Anchor\" href=\"#docker生成背景\">#</a> Docker 生成背景</h2>\n<ol>\n<li>由于各种配置、开发环境的不同（例如各种版本不一致的问题，mysql、java、redis 等），导致了不同人员使用系统时的各种问题。</li>\n<li>换一台机器就要重新部署一遍，费时费力<br>\n由此衍生出 Docker —— <mark>系统平滑移植，容器虚拟化计划</mark><br>\n Docker 解决了：通过将环境复制到 Docker，解决了我的代码只能在我自己电脑上正常工作的问题。<br>\n![[image/Pasted image 20231114193806.png]]</li>\n</ol>\n<h2 id=\"docker-理念\"><a class=\"markdownIt-Anchor\" href=\"#docker-理念\">#</a> Docker 理念</h2>\n<p><mark>一次镜像，处处运行</mark><br>\n<strong> Docker 是基于 Go 语言实现的开源项目</strong><br>\n Docker 主要目标是：Build、Ship And Run Any App，Anywhere；通过对应用组件的封装、分发、部署、运行等生命周期的管理，使用户的 App（可以是一个 Web 应用或者数据库应用）及其运行环境做到一次镜像，处处运行。</p>\n<p><mark>Linux 容器技术</mark>出现解决了这样一个问题，<mark>Docker 是基于此发展出来的</mark>。</p>\n<p>解决了：运行环境和配置问题的软件容器，方便做持续集成有助于整体发布的容器虚拟话技术。</p>\n<h2 id=\"容器与虚拟机的区别\"><a class=\"markdownIt-Anchor\" href=\"#容器与虚拟机的区别\">#</a> 容器与虚拟机的区别</h2>\n<blockquote>\n<p>容器的发展</p>\n</blockquote>\n<p>光盘 - 卡带 - 虚拟机 - 容器</p>\n<blockquote>\n<p>虚拟机</p>\n</blockquote>\n<p>不影响宿主机的运行，而通过 == 宿主机的一个应用程序（虚拟机）== 创建出不同于宿主机的操作系统的多个实例。并在多个实例上安装部署各种应用。<br>\n缺点：</p>\n<ol>\n<li>太重了，将整套操作系统的所有内容都搬来，导致资源占用多。</li>\n<li>太慢了。启动到进入系统，所用时间过长。</li>\n<li>步骤多。</li>\n</ol>\n<p><img data-src=\"https://node-picture-of-typora.oss-cn-hangzhou.aliyuncs.com/image-for-typora/Docker-%E5%AD%A6%E4%B9%A0-%E5%9F%BA%E7%A1%80-01.png\" alt=\"Docker-学习-基础-01.png\"><br>\n<img data-src=\"https://node-picture-of-typora.oss-cn-hangzhou.aliyuncs.com/image-for-typora/20231128175528.png\" alt=\"image.png\"></p>\n",
            "tags": []
        }
    ]
}